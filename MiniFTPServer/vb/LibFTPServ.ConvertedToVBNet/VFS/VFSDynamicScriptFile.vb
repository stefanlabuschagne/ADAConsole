Imports System.Collections.Generic
Imports System.Linq
Imports System.Text
Imports System.Diagnostics
Imports System.IO

Namespace VFS
	''' <summary>
	''' Creates a file which is generated by a dynamic script.
	''' </summary>
	Public Class VFSDynamicScriptFile
		Inherits VFSVirtualFile
		Private _source As String
		Private _type As ScriptType

		''' <summary>
		''' Creates a new instance of VFSDynamicScriptFile
		''' </summary>
		''' <param name="TargetName">The full path that will be visible in the VFS system</param>
		''' <param name="ScriptSource">The full path of the script source</param>
		''' <param name="t">Scrtipt type</param>
		Public Sub New(TargetName As String, ScriptSource As String, t As ScriptType)
			MyBase.New(TargetName)
			_type = t
			_source = ScriptSource
		End Sub

		''' <summary>
		''' Creates a new instance of VFSDynamicScriptFile
		''' </summary>
		''' <param name="TargetName">The full path that will be visible in the VFS system</param>
		''' <param name="ScriptSource">The full path of the script source on Local filesystem</param>
		''' <param name="t">Script type</param>
		''' <param name="time">File Last modification date</param>
		''' <param name="size">File size</param>
		Public Sub New(TargetName As String, ScriptSource As String, t As ScriptType, time As DateTime, size As Long)
			MyBase.New(TargetName, time, size)
			_type = t
			_source = ScriptSource
		End Sub

		''' <summary>
		''' Renders the file
		''' </summary>
		''' <returns>The file as a stream</returns>
		Public Overrides Function RenderContents() As Stream
			Dim p As New Process()
			p.StartInfo.UseShellExecute = False
			p.StartInfo.WindowStyle = ProcessWindowStyle.Hidden
			p.StartInfo.RedirectStandardOutput = True
			p.StartInfo.CreateNoWindow = True

			Select Case _type
				Case ScriptType.Php
					p.StartInfo.FileName = ParserPaths.PhpPath
					p.StartInfo.Arguments = _source
					Exit Select
				Case ScriptType.Python
					p.StartInfo.FileName = ParserPaths.PythonPath
					p.StartInfo.Arguments = _source
					Exit Select
				Case ScriptType.Ruby
					p.StartInfo.FileName = ParserPaths.RubyPath
					p.StartInfo.Arguments = _source
					Exit Select
				Case ScriptType.Standalone
					p.StartInfo.FileName = _source
					Exit Select
			End Select
			p.Start()
			Return p.StandardOutput.BaseStream
		End Function
	End Class
End Namespace
