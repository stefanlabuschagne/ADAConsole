<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Days_Fri_Desc" xml:space="preserve">
    <value>Venus 'dag.</value>
  </data>
  <data name="Days_Fri_Name" xml:space="preserve">
    <value>Fredag</value>
  </data>
  <data name="Days_Mon_Desc" xml:space="preserve">
    <value>Day of the Moon.</value>
  </data>
  <data name="Days_Mon_Name" xml:space="preserve">
    <value>mandag</value>
  </data>
  <data name="Days_None_Desc" xml:space="preserve">
    <value>Begivenhed vil ikke reoccure.</value>
  </data>
  <data name="Days_None_Name" xml:space="preserve">
    <value>Ikke valgt</value>
  </data>
  <data name="Days_NoWork_Desc" xml:space="preserve">
    <value>Kun lørdag og søndag.</value>
  </data>
  <data name="Days_NoWork_Name" xml:space="preserve">
    <value>Weekend</value>
  </data>
  <data name="Days_Sat_Desc" xml:space="preserve">
    <value>Day of Saturn.</value>
  </data>
  <data name="Days_Sat_Name" xml:space="preserve">
    <value>Lørdag</value>
  </data>
  <data name="Days_Sun_Desc" xml:space="preserve">
    <value>Day of solen.</value>
  </data>
  <data name="Days_Sun_Name" xml:space="preserve">
    <value>søndag</value>
  </data>
  <data name="Days_Thr_Desc" xml:space="preserve">
    <value>Day of Jupiter.</value>
  </data>
  <data name="Days_Thr_Name" xml:space="preserve">
    <value>torsdag</value>
  </data>
  <data name="Days_Tue_Desc" xml:space="preserve">
    <value>Day of Mars.</value>
  </data>
  <data name="Days_Tue_Name" xml:space="preserve">
    <value>tirsdag</value>
  </data>
  <data name="Days_Wed_Desc" xml:space="preserve">
    <value>Day of Mercury.</value>
  </data>
  <data name="Days_Wed_Name" xml:space="preserve">
    <value>onsdag</value>
  </data>
  <data name="Days_Work_Desc" xml:space="preserve">
    <value>Alle dage undtagen lørdag og søndag.</value>
  </data>
  <data name="Days_Work_Name" xml:space="preserve">
    <value>Hverdage</value>
  </data>
  <data name="TestClass_Boolean_False_Desc" xml:space="preserve">
    <value>Det er negativ.</value>
  </data>
  <data name="TestClass_Boolean_False_Name" xml:space="preserve">
    <value>Nephi</value>
  </data>
  <data name="TestClass_Boolean_True_Desc" xml:space="preserve">
    <value>Det er positivt.</value>
  </data>
  <data name="TestClass_Boolean_True_Name" xml:space="preserve">
    <value>Yep</value>
  </data>
  <data name="TestClass_Cat1" xml:space="preserve">
    <value>Enumeration funktioner</value>
  </data>
  <data name="TestClass_Cat2" xml:space="preserve">
    <value>Generelle egenskaber</value>
  </data>
  <data name="TestClass_Cat3" xml:space="preserve">
    <value>Billede funktioner</value>
  </data>
  <data name="TestClass_Cat4" xml:space="preserve">
    <value>Standardværdier brug</value>
  </data>
  <data name="TestClass_Cat5" xml:space="preserve">
    <value>Kan udvides IEnumerable</value>
  </data>
  <data name="TestClass_FormStartPosition_CenterParent_Desc" xml:space="preserve">
    <value>Formularen er centreret på den aktuelle skærm, og har dimensionerne i formularens størrelse.</value>
  </data>
  <data name="TestClass_FormStartPosition_CenterParent_Name" xml:space="preserve">
    <value>Center Forældre</value>
  </data>
  <data name="TestClass_FormStartPosition_CenterScreen_Desc" xml:space="preserve">
    <value>Formen er placeret i Windows standard placering og har dimensionerne angivet i formularens størrelse.</value>
  </data>
  <data name="TestClass_FormStartPosition_CenterScreen_Name" xml:space="preserve">
    <value>midten af ​​skærmen</value>
  </data>
  <data name="TestClass_FormStartPosition_Manual_Desc" xml:space="preserve">
    <value>Placeringen af ​​den form er bestemt af sted ejendommen.</value>
  </data>
  <data name="TestClass_FormStartPosition_Manual_Name" xml:space="preserve">
    <value>Manuel</value>
  </data>
  <data name="TestClass_FormStartPosition_WindowsDefaultBounds_Desc" xml:space="preserve">
    <value>Formen er placeret i Windows standard placering og har den begrænsning, som Windows standard.</value>
  </data>
  <data name="TestClass_FormStartPosition_WindowsDefaultBounds_Name" xml:space="preserve">
    <value>Windows Standard Bundet</value>
  </data>
  <data name="TestClass_FormStartPosition_WindowsDefaultLocation_Desc" xml:space="preserve">
    <value>Formen er centreret inden for rammerne af dets moderselskab formular</value>
  </data>
  <data name="TestClass_FormStartPosition_WindowsDefaultLocation_Name" xml:space="preserve">
    <value>Windows Standardplacering</value>
  </data>
  <data name="TestClass_PropA_Desc" xml:space="preserve">
    <value>viser, hvordan du bruger tælling uden FlagsAttribute.</value>
  </data>
  <data name="TestClass_PropA_Name" xml:space="preserve">
    <value>Enum uden Flag</value>
  </data>
  <data name="TestClass_PropB_Desc" xml:space="preserve">
    <value>viser, hvordan du bruger tælling med FlagsAttribute.</value>
  </data>
  <data name="TestClass_PropB_Name" xml:space="preserve">
    <value>Enum med flag</value>
  </data>
  <data name="TestClass_PropC_Desc" xml:space="preserve">
    <value>viser, hvordan du bruger booean som tælling.</value>
  </data>
  <data name="TestClass_PropC_False_Desc" xml:space="preserve">
    <value>viser 'Nej' i stedet for 'falsk'.</value>
  </data>
  <data name="TestClass_PropC_False_Name" xml:space="preserve">
    <value>Nej</value>
  </data>
  <data name="TestClass_PropC_Name" xml:space="preserve">
    <value>Boolean uden Sand / Falsk</value>
  </data>
  <data name="TestClass_PropC_True_Desc" xml:space="preserve">
    <value>viser 'Ja' i stedet for 'True'.</value>
  </data>
  <data name="TestClass_PropC_True_Name" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="TestClass_PropD_Desc" xml:space="preserve">
    <value>viser, hvordan du bruger indbyggede opregning.</value>
  </data>
  <data name="TestClass_PropD_Name" xml:space="preserve">
    <value>Indbygget opregning</value>
  </data>
  <data name="TestClass_PropE_Desc" xml:space="preserve">
    <value>Denne ejendom blev oprettet på run-time.</value>
  </data>
  <data name="TestClass_PropE_Name" xml:space="preserve">
    <value>On-the-fly ejendom</value>
  </data>
  <data name="TestClass_PropF_Desc" xml:space="preserve">
    <value>Demonstrere hvordan du kan deaktivere en ejendom.</value>
  </data>
  <data name="TestClass_PropF_Name" xml:space="preserve">
    <value>Deaktiveret ejendom</value>
  </data>
  <data name="TestClass_PropG_Desc" xml:space="preserve">
    <value>Viser billede til ejendommens værdi. Test værdier: 0, 1, 2 og 3.</value>
  </data>
  <data name="TestClass_PropG_Name" xml:space="preserve">
    <value>Value billede</value>
  </data>
  <data name="TestClass_PropH_Desc" xml:space="preserve">
    <value>Viser hvordan du kan vise et state billede til din ejendom. Test værdier: 0, 1, 2 og 3.</value>
  </data>
  <data name="TestClass_PropH_Name" xml:space="preserve">
    <value>State billede (r)</value>
  </data>
  <data name="TestClass_PropI_Desc" xml:space="preserve">
    <value>Demonstrere brug af standard værdier. Denne liste er ikke eksklusiv, hvilket betyder at du kan skrive i feltet. Test værdier: Adam, brian, Russel, jones, Jakob, 101, 102, 103, 104, 105 og et heltal.</value>
  </data>
  <data name="TestClass_PropI_Name" xml:space="preserve">
    <value>Standard værdsætter ikke-excluive</value>
  </data>
  <data name="TestClass_PropJ_Desc" xml:space="preserve">
    <value>Demonstrere brug af standard værdier. Denne liste er eksklusiv, hvilket betyder at du kan ikke skrive i feltet.</value>
  </data>
  <data name="TestClass_PropJ_Name" xml:space="preserve">
    <value>Standard værdi excluive</value>
  </data>
  <data name="TestClass_PropK_Desc" xml:space="preserve">
    <value>demonstrere brugen af ​​kan udvides listen.</value>
  </data>
  <data name="TestClass_PropK_Name" xml:space="preserve">
    <value>Kan udvides listen</value>
  </data>
  <data name="TestClass_PropL_Desc" xml:space="preserve">
    <value>demonstrere brugen af ​​udvidelsesmuligheder array.</value>
  </data>
  <data name="TestClass_PropL_Name" xml:space="preserve">
    <value>Kan udvides vifte</value>
  </data>
  <data name="TestClass_PropM_Desc" xml:space="preserve">
    <value>demonstrere brugen af ​​udvides kollektionen.</value>
  </data>
  <data name="TestClass_PropM_Name" xml:space="preserve">
    <value>Kan udvides kollektion</value>
  </data>
</root>